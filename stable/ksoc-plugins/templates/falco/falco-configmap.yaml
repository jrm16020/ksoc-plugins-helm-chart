{{- if .Values.ksocRuntime.enabled  }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.falco.fullnameOverride }}
  namespace: {{ .Release.Namespace  }}
  labels:
    app.kubernetes.io/instance: ksoc
    app.kubernetes.io/name: falco
data:
  falco.yaml: |-
    base_syscalls:
      custom_set: []
      repair: false
    buffered_outputs: false
    file_output:
      enabled: false
      filename: ./events.txt
      keep_alive: false
    grpc:
      bind_address: unix:///run/falco/falco.sock
      enabled: true
      threadiness: 0
    grpc_output:
      enabled: true
    http_output:
      ca_bundle: ""
      ca_cert: ""
      ca_path: /etc/ssl/certs
      client_cert: /etc/ssl/certs/client.crt
      client_key: /etc/ssl/certs/client.key
      echo: false
      enabled: true
      insecure: true
      mtls: false
      url: http://ksoc-runtime.ksoc.svc.cluster.local/falco-alert
      user_agent: falcosecurity/falco
    json_include_output_property: true
    json_include_tags_property: true
    json_output: true
    libs_logger:
      enabled: false
      severity: debug
    {{- if .Values.metacollector.enabled }}
    load_plugins:
      - k8smeta
    {{- end }}
    log_level: info
    log_stderr: true
    log_syslog: true
    metadata_download:
      chunk_wait_us: 1000
      max_mb: 100
      watch_freq_sec: 1
    metrics:
      convert_memory_to_mb: true
      enabled: false
      include_empty_values: false
      interval: 1h
      kernel_event_counters_enabled: true
      libbpf_stats_enabled: true
      output_rule: true
      resource_utilization_enabled: true
    engine:
      kind: modern_ebpf
      modern_ebpf:
        cpus_for_each_buffer: 2
    output_timeout: 2000
    outputs:
      max_burst: 1000
      rate: 0
    outputs_queue:
      capacity: 0
    {{- if .Values.metacollector.enabled }}
    plugins:
    - init_config:
        collectorHostname: k8s-metacollector.{{ .Release.Namespace  }}.svc
        collectorPort: 45000
        nodeName: ${FALCO_K8S_NODE_NAME}
      library_path: libk8smeta.so
      name: k8smeta
    {{- end }}
    priority: notice
    program_output:
      enabled: false
      keep_alive: false
      program: 'jq ''{text: .output}'' | curl -d @- -X POST https://hooks.slack.com/services/XXX'
    rule_matching: first
    rules_file:
    - /etc/falco/falco_rules.yaml
    - /etc/falco/falco_rules.local.yaml
    - /etc/falco/rules.d
    stdout_output:
      enabled: false
    syscall_buf_size_preset: 4
    syscall_drop_failed_exit: false
    syscall_event_drops:
      actions:
      - log
      - alert
      max_burst: 1
      rate: 0.03333
      simulate_drops: false
      threshold: 0.1
    syscall_event_timeouts:
      max_consecutives: 1000
    syslog_output:
      enabled: false
    time_format_iso_8601: false
    watch_config_files: true
    webserver:
      enabled: true
      k8s_healthz_endpoint: /healthz
      listen_port: 8765
      ssl_certificate: /etc/falco/falco.pem
      ssl_enabled: false
      threadiness: 0
{{- end }}
